'''
T√çNH C√ÅC BI·ªÇU TH·ª®C MODULO C∆† B·∫¢N
        ùë®ùüè = (a^x + b^y) ùíéùíêùíÖ n
        ùë®2 = (a^x - b^y) ùíéùíêùíÖ n
        ùë®3 = (a^x * b^y) ùíéùíêùíÖ n
        ùë®4 = (b^y)^-1 ùíéùíêùíÖ n
        ùë®5 = (a^x / b^y) ùíéùíêùíÖ n
Input: a = 43; b = 53; x = 308; y = 455; n = 179
T√¨m Output: A1 = ; A2 = ; A3 = ; A4 = ; A5 = ?
'''

def tinhLuyThuaModulo(a, m, n):
    res = 1 # Kh·ªüi t·∫°o k·∫øt qu·∫£
    a = a % n # Chuy·ªÉn a th√†nh a mod n
    while m > 0:
        if m % 2 == 1:
            res = (res * a) % n  # N·∫øu m l√† s·ªë l·∫ª, nh√¢n b v·ªõi a
        m = m // 2 # H·∫° b·∫≠c l≈©y th·ª´a m
        a = (a * a) % n  # C·∫≠p nh·∫≠t a
    return res

def euclidMoRong(a, n):
    r1, r2 = n, a
    x1, x2 = 1, 0
    y1, y2 = 0, 1
    while r2 != 0:
        q = r1 // r2  # T√≠nh th∆∞∆°ng
        r1, r2 = r2, r1 - q * r2  # C·∫≠p nh·∫≠t r
        x1, x2 = x2, x1 - q * x2  # C·∫≠p nh·∫≠t x
        y1, y2 = y2, y1 - q * y2  # C·∫≠p nh·∫≠t y
    res = 0
    if r1 == 1:
        res = y1
    else: res = None
    # N·∫øu res l√† s·ªë √¢m
    if res is not None and res < 0:
        res += n
    return res

if __name__ == "__main__":
    a, b, x, y, n = 43, 53, 308, 455, 179

    # T√≠nh c√°c bi·ªÉu th·ª©c modulo
    A1 = (tinhLuyThuaModulo(a, x, n) + tinhLuyThuaModulo(b, y, n)) % n
    A2 = (tinhLuyThuaModulo(a, x, n) - tinhLuyThuaModulo(b, y, n)) % n
    A3 = (tinhLuyThuaModulo(a, x, n) * tinhLuyThuaModulo(b, y, n)) % n
    A4 = euclidMoRong(tinhLuyThuaModulo(b, y, n), n)
    A5 = (tinhLuyThuaModulo(a, x, n) * euclidMoRong(tinhLuyThuaModulo(b, y, n), n)) % n

    print("=> A1 =", A1)
    print("=> A2 =", A2)
    print("=> A3 =", A3)
    print("=> A4 =", A4)
    print("=> A5 =", A5)
